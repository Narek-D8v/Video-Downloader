import os
import yt_dlp

#pip install yt-dlp
#pip install ffmpeg-python
#pip install ffmpeg
def get_video_url():
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ YouTube-–≤–∏–¥–µ–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—ë."""
    url = input("üì• –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube-–≤–∏–¥–µ–æ:\n").strip()
    if not url.startswith("http"):
        print("‚ùó –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞.")
        return None
    return url

def get_format_choice():
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è."""
    choice = input("üìº –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç: [1] mp4 (–≤–∏–¥–µ–æ) | [2] mp3 (–∞—É–¥–∏–æ): ").strip()
    if choice in ['1', '2']:
        return choice
    print("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞.")
    return None

def create_save_directory(format_choice):
    """–°–æ–∑–¥–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ."""
    user_profile = os.environ.get('USERPROFILE') or os.path.expanduser('~')
    folder_name = 'Downloaded_videos' if format_choice == '1' else 'Downloaded_audios'
    save_dir = os.path.join(user_profile, 'OneDrive', '–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª', folder_name)
    os.makedirs(save_dir, exist_ok=True)
    return save_dir

def setup_ffmpeg():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É ffmpeg."""
    ffmpeg_exe = r'C:\Users\User\ffmpeg\ffmpeg-7.1.1-essentials_build\bin\ffmpeg.exe'
    if not os.path.isfile(ffmpeg_exe):
        print(f"‚ùó –ù–µ —É–¥–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ ffmpeg –ø–æ –ø—É—Ç–∏: {ffmpeg_exe}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ffmpeg.")
        return None
    return ffmpeg_exe

def configure_download_options(format_choice, save_dir):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–ø—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è yt-dlp."""
    ydl_opts = {
        'outtmpl': os.path.join(save_dir, '%(title)s.%(ext)s'),
        'noplaylist': True,
        'ffmpeg_location': setup_ffmpeg(),
        'nocheckcertificate': True
    }
    if format_choice == '1':
        ydl_opts['format'] = 'bestvideo+bestaudio/best'
        ydl_opts['merge_output_format'] = 'mp4'
    elif format_choice == '2':
        ydl_opts.update({
            'format': 'bestaudio/best',
            'postprocessors': [{
                'key': 'FFmpegExtractAudio',
                'preferredcodec': 'mp3',
                'preferredquality': '192'
            }]
        })
    return ydl_opts

def download_video(url, ydl_opts):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º yt-dlp."""
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            ydl.download([url])
        print("\n‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    url = get_video_url()
    if url is None:
        return

    format_choice = get_format_choice()
    if format_choice is None:
        return

    save_dir = create_save_directory(format_choice)
    ydl_opts = configure_download_options(format_choice, save_dir)
    download_video(url, ydl_opts)

# üöÄ –°—Ç–∞—Ä—Ç
if __name__ == "__main__":
    main()