import os
import yt_dlp

VIDEO_DIR = r"C:\Users\User\OneDrive\–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª\Downloaded_videos"
AUDIO_DIR = r"C:\Users\User\OneDrive\–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª\Downloaded_audios"
FFMPEG_DIR = r"C:\Users\User\ffmpeg\ffmpeg-7.1.1-essentials_build\bin"
FFMPEG_EXE = os.path.join(FFMPEG_DIR, 'ffmpeg.exe')


def check_ffmpeg():
    if not os.path.isfile(FFMPEG_EXE):
        print(f"\n‚ùå FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {FFMPEG_EXE}")
        exit(1)


def get_video_url():
    url = input("üì• –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube-–≤–∏–¥–µ–æ:\n> ").strip()
    if not url.startswith("http"):
        print("‚ùó –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞.")
        return None
    return url


def get_format_choice():
    print("\nüìº –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç:")
    print("[1] –í–∏–¥–µ–æ (.mp4 —Å AAC)")
    print("[2] –ê—É–¥–∏–æ (.mp3)")
    choice = input("> ").strip()
    if choice in ['1', '2']:
        return choice
    print("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")
    return None


def build_yt_dlp_options(format_choice):
    if format_choice == '1':
        save_dir = VIDEO_DIR
        opts = {
            'format': 'bestvideo+bestaudio/best',
            'outtmpl': os.path.join(save_dir, '%(title)s.%(ext)s'),
            'noplaylist': True,
            'nocheckcertificate': True,
            'ffmpeg_location': FFMPEG_DIR,
            'merge_output_format': 'mp4',
            'postprocessor_args': [
                '-c:v', 'copy',      # –≤–∏–¥–µ–æ ‚Äî –∫–æ–ø–∏—Ä—É–µ–º
                '-c:a', 'aac',       # –ø–µ—Ä–µ–∫–æ–¥–∏—Ä—É–µ–º –∞—É–¥–∏–æ –≤ AAC
                '-b:a', '192k'       # –∫–∞—á–µ—Å—Ç–≤–æ
            ],
            'cachedir': False,
        }
    else:
        save_dir = AUDIO_DIR
        opts = {
            'format': 'bestaudio/best',
            'outtmpl': os.path.join(save_dir, '%(title)s.%(ext)s'),
            'noplaylist': True,
            'nocheckcertificate': True,
            'ffmpeg_location': FFMPEG_DIR,
            'cachedir': False,
            'postprocessors': [{
                'key': 'FFmpegExtractAudio',
                'preferredcodec': 'mp3',
                'preferredquality': '192',
            }],
        }

    os.makedirs(save_dir, exist_ok=True)
    return opts, save_dir


def download_content(url, options):
    try:
        with yt_dlp.YoutubeDL(options) as ydl:
            ydl.download([url])
        return True
    except Exception as e:
        print(f"\n‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")
        return False


def main():
    print("üé¨ YouTube Downloader")
    print("=" * 30)
    check_ffmpeg()

    while True:
        url = get_video_url()
        if not url:
            continue

        fmt = get_format_choice()
        if not fmt:
            continue

        ydl_opts, output_dir = build_yt_dlp_options(fmt)
        print("\n‚è≥ –ù–∞—á–∏–Ω–∞—é —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ...")
        success = download_content(url, ydl_opts)

        if success:
            print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω –≤: {output_dir}")
        else:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏.")

        again = input("\nüîÑ –°–∫–∞—á–∞—Ç—å –µ—â—ë? (y/n): ").strip().lower()
        if again != 'y':
            break

    print("\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–æ.")


if __name__ == "__main__":
    main()
